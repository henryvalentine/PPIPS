//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ImportPermitPortal.EF.Model
{
    using System;
    using System.Collections.Generic;
    
    public partial class Depot
    {
        public Depot()
        {
            this.ApplicationDepots = new HashSet<ApplicationDepot>();
            this.DepotDischarges = new HashSet<DepotDischarge>();
            this.DepotTrunkedOuts = new HashSet<DepotTrunkedOut>();
            this.Notifications = new HashSet<Notification>();
            this.NotificationDischageDatas = new HashSet<NotificationDischageData>();
            this.NotificationInspections = new HashSet<NotificationInspection>();
            this.StorageTanks = new HashSet<StorageTank>();
            this.ThroughPuts = new HashSet<ThroughPut>();
        }
    
        public int Id { get; set; }
        public string Name { get; set; }
        public int JettyId { get; set; }
        public Nullable<long> ImporterId { get; set; }
        public string DepotLicense { get; set; }
        public Nullable<System.DateTime> IssueDate { get; set; }
        public Nullable<System.DateTime> ExpiryDate { get; set; }
        public Nullable<bool> Status { get; set; }
    
        public virtual ICollection<ApplicationDepot> ApplicationDepots { get; set; }
        public virtual Importer Importer { get; set; }
        public virtual Jetty Jetty { get; set; }
        public virtual ICollection<DepotDischarge> DepotDischarges { get; set; }
        public virtual ICollection<DepotTrunkedOut> DepotTrunkedOuts { get; set; }
        public virtual ICollection<Notification> Notifications { get; set; }
        public virtual ICollection<NotificationDischageData> NotificationDischageDatas { get; set; }
        public virtual ICollection<NotificationInspection> NotificationInspections { get; set; }
        public virtual ICollection<StorageTank> StorageTanks { get; set; }
        public virtual ICollection<ThroughPut> ThroughPuts { get; set; }
    }
}
