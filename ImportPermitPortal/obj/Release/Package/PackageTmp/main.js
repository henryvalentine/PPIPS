
"use strict";
require.config({
    baseUrl: "",

    // alias libraries paths
    paths: {
        'application-configuration': 'scripts/application-configuration',
        'jQuery': 'Scripts/jquery-2.1.1.min',
        'angular': 'scripts/angular',
        'ngIdle': 'Scripts/angular-idle.min',
        'datePicker': 'Scripts/datePicker',
        'isteven-multi-select': 'Scripts/isteven-multi-select',
        'ui.select': 'Scripts/select.min',
        'angular-route': 'scripts/angular-route',
        'angularAMD': 'scripts/angularAMD',
        'ui-bootstrap': 'scripts/ui-bootstrap-tpls-0.11.2.min',
        'blockUI': 'scripts/angular-block-ui',
        'angularFileUpload': 'scripts/angular-file-upload.min',
        'ngload': 'scripts/ngload',
        'bootstrap': 'scripts/bootstrap.min',
        'ngDialog': 'scripts/ngDialog',
        'fileReader': 'scripts/fileReader',
        'ngStorage': 'scripts/ngStorage.min',
        'ui.utils.masks': 'scripts/masks',
        
        //SERVICES
        'ajaxServices': 'App/Services/ajaxServices',
        'documentServices': 'App/Services/documentServices',
        'userDocumentServices': 'App/Services/userDocumentServices',
        'applicationService': 'App/Services/applicationServices',
        'importElReqService': 'App/Services/importEligibilityRequirementServices',
        'importEligibilityService': 'App/Services/importEligibilityServices',
        'productRequirementService': 'App/Services/productRequirementServices',
        'importStageService': 'App/Services/applicationStageService',
        'documentRequirementService': 'App/Services/documentRequirementService',
        'productService': 'App/Services/productServices',
        'documentTypeRightService': 'App/Services/documentTypeRightServices',
        'bankService': 'App/Services/bankServices',
        'userAppService': 'App/Services/userAppServices',
        'bnkAdminService': 'App/Services/BnkAdminServices',
        'customCodeService': 'App/Services/CustomCodeServices',
        'standardReqService': 'App/Services/standardRequirementServices',
        'productColumnService': 'App/Services/productColumnServices',
        'appSettingService': 'App/Services/appSettingServices',
        'adminApplicationService': 'App/Services/AdminApplicationServices',
        'notificationService': 'App/Services/notificationServices',
        'userNotificationService': 'App/Services/userNotificationServices',
        'bnkNotificationService': 'App/Services/bnkNotificationServices',
        'accountTypeService': 'App/Services/accountTypeServices',
        'documentTypeService': 'App/Services/documentTypeServices',
        'feeTypeService': 'App/Services/feeTypeServices',
        'feeService': 'App/Services/feeServices',
        'faqCategoryService': 'App/Services/FaqCategoryService',
        'issueCategoryService': 'App/Services/issueCategoryService',
        'issueService': 'App/Services/issueServices',
        'faqService': 'App/Services/faqServices',
        'contentService': 'App/Services/contentServices',
        'applicationContentService': 'App/Services/applicationContentServices',
        

        'applicationIssueService': 'App/Services/ApplicationIssueService',
        'processService': 'App/Services/processService',
        'workFlowService': 'App/Services/workFlowService',
        'portService': 'App/Services/PortService',
        'notificationTypeService': 'App/Services/NotificationTypeService',
        'zoneService': 'App/Services/ZoneService',
        'vesselService': 'App/Services/VesselServices',
        'jettyService': 'App/Services/JettyService',
        'jettyMappingService': 'App/Services/JettyMappingService',
        'regionService': 'App/Services/RegionService',
        'countryService': 'App/Services/CountryService',
        'permitService': 'App/Services/PermitService',
        'stepService': 'App/Services/StepService',
        'groupService': 'App/Services/GroupService',
        'stepActivityTypeService': 'App/Services/StepActivityTypeService',
        'employeeDeskService': 'App/Services/EmployeeDeskService',
        'employeeProfileService': 'App/Services/EmployeeProfileService',
        'employeeHistoryService': 'App/Services/EmployeeHistoryService',
        'verifyPermitService': 'App/Services/VerifyPermitService',
        'employeeActivateAccountService': 'App/Services/EmployeeActivateAccountService',
        'calculatorService': 'App/Services/CalculatorService',
        'notificationCheckListService': 'App/Services/NotificationCheckListService',
        'storageTankService': 'App/Services/StorageTankService',
        'notificationTrackService': 'App/Services/EmployeeNotificationTrackService',
        'issueTypeService': 'App/Services/IssueTypeService',
        'storageProviderTypeService': 'App/Services/storageProviderTypeServices',
        'generalInformationService': 'App/Services/generalInformationServices',
        'companyDocumentService': 'App/Services/companyDocumentServices',
        'importClassService': 'App/Services/importClassServices',
        'importClassReqService': 'App/Services/importClassificationReqServices',
        'depotService': 'App/Services/depotServices',
        'processHistoryService': 'App/Services/ProcessHistoryService',
        'unitOfMeasurementService': 'App/Services/UnitOfMeasurementService',
        'importReqService': 'App/Services/importReqServices',
        'depotOwnerService': 'App/Services/depotOwnerServices',
        'standardReqTypeService': 'App/Services/standardReqTypeServices',
        'recertificationService': 'App/Services/RecertificationService',
        'employeeService': 'App/Services/EmployeeService',
        'employeeRecertificationService': 'App/Services/EmployeeRecertificationService',
        'employeeNotificationService': 'App/Services/EmployeeNotificationService',
        'employeeNotificationHistoryService': 'App/Services/EmployeeNotificationHistoryService',
        'employeeRecertificationHistoryService': 'App/Services/EmployeeRecertificationHistoryService',
        'messageTemplateService': 'App/Services/messageTemplateService',
        'invoiceService': 'App/Services/invoiceServices',
        'receiptService': 'App/Services/receiptServices',
        'adminRecertificationService': 'App/Services/AdminRecertificationService',
        'importerService': 'App/Services/importerService',
        'importerAppService': 'App/Services/importerAppService',
        'appUserService': 'App/Services/appUserServices',


        'angular-sanitize': 'scripts/angular-sanitize.min'
    },


    // Add angular modules that does not support AMD out of the box, put it in a shim
    shim: {
        'fileupload-shim': ['angular'],
        'fileupload': ['angular'],
        'angularAMD': ['angular'],
        'angular-route': ['angular'],
        'blockUI': ['angular'],
        'angular-sanitize': ['angular'],
        'ui-bootstrap': ['angular'],
        'ngDialog': ['angular'],
        'angularFileUpload': ['angular'],
        'fileReader': ['angular'],
        'datePicker': ['angular'],
        'isteven-multi-select': ['angular'],
        'ui.select': ['angular'],
        'ngStorage': ['angular'],
        'ui.utils.masks': ['angular'],
        'ngIdle': ['angular']
    },

    // kick start application
    deps: ['application-configuration']
});
